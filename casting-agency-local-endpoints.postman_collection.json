{
	"info": {
		"_postman_id": "0eacd798-e273-4066-b1c8-c70fdceead82",
		"name": "casting-agency-local-endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "POST /actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4ecbc87-f667-4ef0-a3c2-fb4de04cab60",
								"exec": [
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Samantha\",\n\t\"age\": 30,\n\t\"gender\": \"Female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/actor",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "977d1f6b-3e56-4aa6-848d-5fd37e19b86d",
								"exec": [
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Movie Ga\",\n\t\"release_date\": \"2020-05-05 18:51:16\",\n\t\"actors\":[1]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/movie",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66c440da-2585-41e0-88c8-41bb5b4f59e8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response contains movies array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db11f593-e420-4105-9873-cf6908a210b1",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains actors array\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/actor",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /actors of a movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10fc4cb3-8a93-405a-b58d-aa765eae514c",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains actors array\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie/1/actors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"1",
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /actor/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae31b590-fd07-4637-8d65-14b09813d06b",
								"exec": [
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Samantha S\",\n\t\"age\": 31,\n\t\"gender\": \"Female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/actor/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /movie/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d0ca583-9f5a-415a-9b6c-e367ea22ef5d",
								"exec": [
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Movie 2000\",\n\t\"release_date\": \"2020-05-05 08:51:16\",\n\t\"actors\":[1]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/movie/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /actor/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "186fab61-6a0e-42c1-bf6d-7e5e059f62f3",
								"exec": [
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/actor/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /movie/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a7bf6d2-9284-432c-8f6c-1b5e1901eba0",
								"exec": [
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Il9Od1ZnMHBkTWdST0tsVVZLUkc3cyJ9.eyJpc3MiOiJodHRwczovL2Nhc3RpbmctYWdlbmN5LWZzbmQuZXUuYXV0aDAuY29tLyIsInN1YiI6Imdvb2dsZS1vYXV0aDJ8MTAzOTM0NzcxMzY1ODQ3NDI5MjIwIiwiYXVkIjpbImNhc3RpbmciLCJodHRwczovL2Nhc3RpbmctYWdlbmN5LWZzbmQuZXUuYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTU5MTM1NDU4NSwiZXhwIjoxNTkxNDQwOTg1LCJhenAiOiJZVEZ2ODJ6Sklib2dMTzhQV0w2MWJWaDIzVHJwWEM3WCIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllX2FjdG9ycyIsImdldDptb3ZpZXMiXX0.JhTZEaWDHfe96i_rSfipoW0kCbHk8-3hPBSF90rIKSglZc8KrrjeS0H8g06LJ86G91YAFdWoDU2AG1u-WqTv-LeNe-A5bz-YmBWaEu5twCXEqTb8pYVvzLQ9MLE-wsCmrY3r7o0IOf0ecSPya1qJlB0ifj4_PzIwJ1fAXsrvSgzk-9PMMBQ5pk0wFMQZk8Xvv_9isFVv0Xp2BAdfj7h_P48TWSeQNyzRnc7G7We6M1-Hppqlk8I6fNR960vwcPK2OmNfbypHCypjaxKITBsrbbfr8eh2K1kENn8TfDCb2UiOU1S1IaspbFW4D4oehagwwzIQT03FqbgWQZ38gwVt5g",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8ad324ab-b8ae-4fd7-a669-99f07971c418",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "061f5d12-471b-4e8e-bc4b-e944af5c951a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "POST /actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c7a17d7-9211-4699-b842-9ba8f5a1f27f",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"New Actor\",\n\t\"age\": 30,\n\t\"gender\": \"Female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/actor",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "851ed339-ff1c-40d9-8f3b-8b9b0a9147da",
								"exec": [
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Movie Ga\",\n\t\"release_date\": \"2020-05-05 18:51:16\",\n\t\"actors\":[1]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/movie",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d2423e1-52f1-406f-a355-1a1687bf264f",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains movies array\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88131060-b676-4ffc-81c0-5e579dd557b8",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains actors array\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/actor",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /actors of a movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfbcbb70-a1c4-4bf3-9108-5fa4ac4bd971",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains actors array\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie/1/actors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"1",
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /actor/15",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8e3466f-ab23-4416-b7f5-4ce388e1bffd",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains updated_actor\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.jsonBody(\"updated_actor\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"New Actor Update\",\n\t\"age\": 31,\n\t\"gender\": \"Female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/actor/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /movie/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eac0ba6b-e4e3-42f6-99e4-cfca06597307",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains updated_movie\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.jsonBody(\"updated_movie\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Friendss\",\n\t\"release_date\": \"2020-05-05 08:51:16\",\n\t\"actors\":[1, 12]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/movie/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /actor/15",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5182db4-7449-4730-aa23-ad5852c8fc6b",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains deleted_actor\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.jsonBody(\"deleted_actor\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/actor/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /movie/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "658f587f-5b34-49e9-80d4-b2a8ff7c1020",
								"exec": [
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Il9Od1ZnMHBkTWdST0tsVVZLUkc3cyJ9.eyJpc3MiOiJodHRwczovL2Nhc3RpbmctYWdlbmN5LWZzbmQuZXUuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVlZDkwZjJhNGQ1MzY0MGI3OTQyZTAyMiIsImF1ZCI6ImNhc3RpbmciLCJpYXQiOjE1OTEzNTAxMjgsImV4cCI6MTU5MTQzNjUyOCwiYXpwIjoiWVRGdjgyekpJYm9nTE84UFdMNjFiVmgyM1RycFhDN1giLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImNyZWF0ZTphY3RvciIsImRlbGV0ZTphY3RvciIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVfYWN0b3JzIiwiZ2V0Om1vdmllcyIsInVwZGF0ZTphY3RvciIsInVwZGF0ZTptb3ZpZSJdfQ.Idl6dJQGqpWA3AxciLlTu2GdXYAJtBW9GF3uOW-uWAX4cB0UkIDZGmBSgbB-46RxgJC8e1069l5r8Bo4_h-lBnWHLbXuo0vOSBr4bNwoKaY1VVNy6DkpIkuch3AGCJllisIIaZl4FvYQV1805T8PVLZtc575DyAdx7DZPjE97zHTSpKjjTmoEahN3pE8q2iLddsN18gErYB-jErVrfHrlWwPySwLFTYQMCTyvY7ZTmHD7fvJICViDhrdZFDA-yGSBUCbtkAOtiXGLeAhqTnoAI8k8enGBb_t6zNqChGTCSrDhoG8o7CvHt-LJNQJxgEACLNxfEA4UtSywCCHryoOxQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "33e62be4-d87e-47db-ae89-fab88501dd3c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7537f0a7-077f-4309-a92c-5ca0cafa0fde",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "POST /actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "affeb81e-f152-4988-b230-a9e270a43d33",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Actor Name\",\n\t\"age\": 52,\n\t\"gender\": \"Male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/actor",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b71c284-a7ab-4b3a-8b69-a560942b29a5",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Movie Name\",\n\t\"release_date\": \"2015-07-03 18:51:16\",\n\t\"actors\":[1]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/movie",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e521e88-4035-44e2-b547-9707c9d6b70b",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains movies array\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5e55d45-4846-4790-ad16-8ead11522faf",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains actors array\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/actor",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /actors of a movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "033a258c-f4ba-41eb-a89f-f605cb1e29e2",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains actors array\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie/8/actors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"8",
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /actor/7",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28693f8f-f90d-4c6a-874f-52805bf551ea",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains updated_actor\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.jsonBody(\"updated_actor\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\r\n      \"age\": 29,\r\n      \"gender\": \"female\",\r\n      \"name\": \"Hansika\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/actor/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH /movie/6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dad284dc-9064-4ce3-8eba-f79e714ad8aa",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains updated_movie\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.jsonBody(\"updated_movie\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Singam 2\",\n\t\"release_date\": \"2013-04-17 08:51:16\",\n\t\"actors\":[7, 12]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/movie/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /actor/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb90e430-38b5-4b75-b179-0dbef6b434d9",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains deleted_actor\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.jsonBody(\"deleted_actor\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/actor/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"actor",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /movie/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57f4664e-4217-4048-8360-b38de36022b7",
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"response contains deleted_movie\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.jsonBody(\"deleted_movie\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/movie/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"movie",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Il9Od1ZnMHBkTWdST0tsVVZLUkc3cyJ9.eyJpc3MiOiJodHRwczovL2Nhc3RpbmctYWdlbmN5LWZzbmQuZXUuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVlYzNhZjk1MjVjZmRlMGJmZjg1M2IzYiIsImF1ZCI6ImNhc3RpbmciLCJpYXQiOjE1OTEzNDkzMzUsImV4cCI6MTU5MTQzNTczNSwiYXpwIjoiWVRGdjgyekpJYm9nTE84UFdMNjFiVmgyM1RycFhDN1giLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImNyZWF0ZTphY3RvciIsImNyZWF0ZTptb3ZpZSIsImRlbGV0ZTphY3RvciIsImRlbGV0ZTptb3ZpZSIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVfYWN0b3JzIiwiZ2V0Om1vdmllcyIsInVwZGF0ZTphY3RvciIsInVwZGF0ZTptb3ZpZSJdfQ.Aithc1ZwKa79zGIWYU8eDzRedFit8OSKVM8s681WT7Y9q5nSpr2VDbr5R9NNgmxXndsu_22K54gGfdFqzOCKULwUWKyIBgY1VI1jwDWZihL6V-EOSS2vyVYWmb9qUPVO6i5PMbMN1Nxs9bI2iy_rGmnIzug4HOhsga16E2vNEEOvBqliP2wDeaBFpzIt3rL4hArgb0mu4mh3hrUyTD15QcgvCaq2hnikZduqkXgGfOQXDopVSIMpVxBaw-sS4d0LbY8HahHub93M20SYXSLg0QFZCZYLFYOLexN1_oryVwFfNwgPxyOMbUVrpJARgKHZfsx4ME3AERA1b35-eb9eTg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6817f1a8-d64d-4cdd-84aa-a5d86a573fff",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1960bd63-2f71-4e0d-bab8-7221e284a560",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0cfb2b7b-5e22-449b-9c16-66408dbfec5a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "84855b67-10b9-4617-a491-c990199aed37",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}